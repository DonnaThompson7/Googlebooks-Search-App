{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DLTho\\\\bootcamp\\\\Googlebooks-Search-App\\\\client\\\\src\\\\pages\\\\SavedBooks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Card, Button, Row, Col } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ME } from \"../utils/queries\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\n// import { getMe, deleteBook } from '../utils/API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SavedBooks = () => {\n  _s();\n  // const [userData, setUserData] = useState({});\n  const {\n    loading,\n    data\n  } = useQuery(GET_ME);\n  const userData = (data === null || data === void 0 ? void 0 : data.me) || {};\n  const [deleteBook] = useMutation(REMOVE_BOOK);\n\n  // use this to determine if `useEffect()` hook needs to run again\n  // const userDataLength = Object.keys(userData).length;\n\n  // useEffect(() => {\n  //   const getUserData = async () => {\n  //     try {\n  //       const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  //       if (!token) {\n  //         return false;\n  //       }\n\n  //       const response = await getMe(token);\n\n  //       if (!response.ok) {\n  //         throw new Error('something went wrong!');\n  //       }\n\n  //       const user = await response.json();\n  //       setUserData(user);\n  //     } catch (err) {\n  //       console.error(err);\n  //     }\n  //   };\n\n  //   getUserData();\n  // }, [userDataLength]);\n\n  if (!(userData !== null && userData !== void 0 && userData.username)) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Need to be logged in to see this page!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async bookId => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      await deleteBook({\n        variables: {\n          bookId: bookId\n        },\n        update: cache => {\n          const data = cache.readQuery({\n            query: GET_ME\n          });\n          const userDataCache = data.me;\n          const savedBooksCache = userDataCache.savedBooks;\n          const updatedBookCache = savedBooksCache.filter(book => book.bookId !== bookId);\n          data.me.savedBooks = updatedBookCache;\n          cache.writeQuery({\n            query: GET_ME,\n            data: {\n              data: {\n                ...data.me.savedBooks\n              }\n            }\n          });\n        }\n      });\n\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      fluid: true,\n      className: \"text-light bg-dark p-5\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Viewing saved books!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"pt-5\",\n        children: userData.savedBooks.length ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:` : 'You have no saved books!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: userData.savedBooks.map(book => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"dark\",\n              children: [book.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n                src: book.image,\n                alt: `The cover for ${book.title}`,\n                variant: \"top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: book.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"small\",\n                  children: [\"Authors: \", book.authors]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: book.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-block btn-danger\",\n                  onClick: () => handleDeleteBook(book.bookId),\n                  children: \"Delete this Book!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)]\n            }, book.bookId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SavedBooks, \"bS248kZ2xp42SJBG0k8/vsiuxFk=\", false, function () {\n  return [useQuery, useMutation];\n});\n_c = SavedBooks;\nexport default SavedBooks;\nvar _c;\n$RefreshReg$(_c, \"SavedBooks\");","map":{"version":3,"names":["React","useState","useEffect","Container","Card","Button","Row","Col","useQuery","useMutation","GET_ME","REMOVE_BOOK","Auth","removeBookId","jsxDEV","_jsxDEV","Fragment","_Fragment","SavedBooks","_s","loading","data","userData","me","deleteBook","username","children","fileName","_jsxFileName","lineNumber","columnNumber","handleDeleteBook","bookId","token","loggedIn","getToken","variables","update","cache","readQuery","query","userDataCache","savedBooksCache","savedBooks","updatedBookCache","filter","book","writeQuery","err","console","error","fluid","className","length","map","md","border","image","Img","src","alt","title","variant","Body","Title","authors","Text","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DLTho/bootcamp/Googlebooks-Search-App/client/src/pages/SavedBooks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Card,\n  Button,\n  Row,\n  Col\n} from 'react-bootstrap';\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ME } from \"../utils/queries\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\n// import { getMe, deleteBook } from '../utils/API';\n\nconst SavedBooks = () => {\n  // const [userData, setUserData] = useState({});\n  const { loading, data } = useQuery(GET_ME);\n  const userData = data?.me || {};\n  const [deleteBook] = useMutation(REMOVE_BOOK);\n\n  // use this to determine if `useEffect()` hook needs to run again\n  // const userDataLength = Object.keys(userData).length;\n\n  // useEffect(() => {\n  //   const getUserData = async () => {\n  //     try {\n  //       const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  //       if (!token) {\n  //         return false;\n  //       }\n\n  //       const response = await getMe(token);\n\n  //       if (!response.ok) {\n  //         throw new Error('something went wrong!');\n  //       }\n\n  //       const user = await response.json();\n  //       setUserData(user);\n  //     } catch (err) {\n  //       console.error(err);\n  //     }\n  //   };\n\n  //   getUserData();\n  // }, [userDataLength]);\n\n  \n  if (!userData?.username) {\n    return <h4>Need to be logged in to see this page!</h4>;\n  }\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      await deleteBook({\n        variables: { bookId: bookId },\n        update: (cache) => {\n          const data = cache.readQuery({ query: GET_ME });\n          const userDataCache = data.me;\n          const savedBooksCache = userDataCache.savedBooks;\n          const updatedBookCache = savedBooksCache.filter(\n            (book) => book.bookId !== bookId\n          );\n          data.me.savedBooks = updatedBookCache;\n          cache.writeQuery({\n            query: GET_ME,\n            data: { data: { ...data.me.savedBooks } },\n          });\n        },\n      });\n      \n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <div fluid className=\"text-light bg-dark p-5\">\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </div>\n      <Container>\n        <h2 className='pt-5'>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <Row>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Col md=\"4\">\n                <Card key={book.bookId} border='dark'>\n                  {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                  <Card.Body>\n                    <Card.Title>{book.title}</Card.Title>\n                    <p className='small'>Authors: {book.authors}</p>\n                    <Card.Text>{book.description}</Card.Text>\n                    <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                      Delete this Book!\n                    </Button>\n                  </Card.Body>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}